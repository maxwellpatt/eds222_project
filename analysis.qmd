---
title: "Initial Exploration"
format: html
editor: visual
---

Data has been obtained from the following sources:

Economic Freedom of the World: 2022 Annual Report: https://www.fraserinstitute.org/studies/economic-freedom-of-the-world-2022-annual-report

-   Stored as freedom variable

-   Contains freedom index for each country for each year

-   Columns of interest:

    -   Government consumption -- x1a_government_consumption

    -   Size of government -- x1_size_of_government

    -   Money growth -- x3a_money_growth

    -   FInancial openness -- x4di_financial_openness

    -   Freedom to trade internationally -- x4_freedom_to_trade_internationally

    -   Credit market regulations -- x5a_credit_market_regulation

    -   Labor market regulations -- x5b_labor_market_regulations

    -   Regulation -- x5_regulation

    -   Region -- world_bank_region

```{r, warning=FALSE}
# import libraries
library(here)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(janitor)
library(tidyr)
library(MASS)
library(randomForest)
```

```{r}
# ------------------------------- DATA CLEANING ------------------------------- #

# read in freedom data
freedom <- read.csv(here('data/freedom/efw_ratings.csv'), header = FALSE)

# set the 5th row as column names
colnames(freedom) <- freedom[5, ]

# remove first 4 rows
freedom <- freedom[-c(1:5), ]

# clean up column names in freedom using janitor package 
freedom <- clean_names(freedom)

# convert appropriate columns from char to num
freedom <- freedom %>%
      mutate(across(6:ncol(freedom), as.numeric))

# store only 2021 scores
freedom_2021 <- freedom %>% 
  filter(year == 2021) %>% 
  select(c(-year, -na))

```

```{r}

# read in esg data
esg_bank <- read.csv(here('data/esg_worldbank.csv'))

# ------------------------------- update column names ------------------------------- #

# extract column names for columns 5 to 29
original_col_names <- colnames(esg_bank)[5:29]

# remove the first 7 characters
modified_col_names <- substr(original_col_names, 10, nchar(original_col_names))

# remove the last character of all of the year columns

# update the data frame with modified column names
colnames(esg_bank)[5:29] <- modified_col_names

# remove 'Country Code' and 'Series Code' columns
esg_bank <- subset(esg_bank, select = -c(Country.Code, Series.Code))

# renaming esg columns
colnames(esg_bank)[colnames(esg_bank) == "Country.Name"] <- "countries"
colnames(esg_bank)[colnames(esg_bank) == "Series.Name"] <- "Series"

# make year columns numeric
esg_bank <- esg_bank %>%
  mutate(across(`1998.`:`2022.`, as.numeric))


# view the modified column names to confirm changes
colnames(esg_bank)

# transform data so each row represents a country, year and series 
# pivot and filter to emissions per capita in 2020
emissions_per_capita_2020 <- esg_bank %>%
  pivot_longer(
    cols = '1998.':'2022.',
    names_to = "Year",
    values_to = "Value"
  ) %>%
  filter(Year == '2020.') %>% 
  filter(Series == 'Methane emissions (metric tons of CO2 equivalent per capita)')

# joins freedom with 2021 emissions data
freedom_2021_emissions <- freedom_2021 %>% 
  left_join(emissions_per_capita_2020, by = 'countries')

filtered <- freedom_2021_emissions %>%
  arrange(desc(x3_sound_money)) 
```

```{r}
correlation_analysis <- cor(combined_data$Value, combined_data$x5_regulation, use = "complete.obs")

```

```{r}
ggplot(combined_data, aes(x = x5_regulation, y = Value)) +
  geom_point() +
  labs(title = "Emissions per Capita vs Government Consumption",
       x = "Government Consumption",
       y = "Emissions per Capita")
```

```{r}
# ------------------------------- lin reg testing ------------------------------- #

```

```{r}
# ------------------------------- logit testing ------------------------------- #
# Assuming OrdinalOutcome is your ordinal dependent variable
# Converting it to an ordered factor
freedom_2021_emissions$Value <- ordered(freedom_2021_emissions$economic_freedom_summary_index)

# Fit ordinal logistic regression model
ordinal_model <- polr(Value ~ economic_freedom_summary_index,
                      data = freedom_2021_emissions, 
                      Hess = TRUE)

# View model summary
summary(ordinal_model)


```

```{r}
# Convert to numeric if it's not numeric
if (!is.numeric(freedom_2021_emissions$Value)) {
  freedom_2021_emissions$Value <- as.numeric(as.character(freedom_2021_emissions$Value))
}

# ------------------------------- lin reg testing ------------------------------- #
# Remove rows with missing values
freedom_2021_emissions_clean <- na.omit(freedom_2021_emissions)

# Then re-run your model
model <- lm(Value ~ x1c_government_investment, data = freedom_2021_emissions)

model
```

```{r}
ggplot(freedom_2021_emissions, aes(x = x1c_government_investment, y = Value)) +
  geom_point() +
  labs(title = "Value vs. Government Investment",
       x = "Government Investment",
       y = "Value") +
  theme_minimal()

```
